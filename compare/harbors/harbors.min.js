!function () {
    var a = function () {
        var a = function () {
            this.BASECLASS = {}, this.BASENODE = {}, this.utils = {}
        };
        return a.prototype = {constructor: a, BROWSER: {chrome: "chrome", firefox: "firefox", ie: "ie", opera: "opera", safari: "safari", micromessage: "微信", qqbrowser: "QQ", baidu: "百度", uc: "UC", liebao: "猎豹"}, SYSTEM: {IOS: "ios", ANDROID: "android", WINDOWS: "windows", MAC: "mac", LINUX: "linux", UNIX: "unix"}}, new a
    }();
    a.utils.inherit = function (a, b) {
        a.super_ = b, a.prototype = Object.create(b.prototype, {constructor: {value: a, enumerable: !1, writable: !0, configurable: !0}})
    }, a.utils.pathJoin = function (a, b) {
        var c = a + b;
        return c = c.replace(/([^\/]+\/[^\/]+\/[^\/]+)\.\.\/\.\.\//g, ""), c = c.replace(/([^\/]+\/[^\/]+)\.\.\//g, ""), c = c.replace(/[^\/]+\.\//g, "")
    }, a.options = function () {
        var b = {id: "gameCanvas", fps: 60, getter: null, debug: !1, system: {}}, c = b.system, d = navigator.userAgent.toLowerCase(), e = navigator.appVersion.toLowerCase(), f = navigator.platform.toLowerCase(), g = "";
        d.indexOf("msie") > -1 || d.indexOf("trident") > -1 ? (c.browser = a.BROWSER.ie, g = d.match(/msie ([\d.]+)/), g ? c.version = g[1] : (g = d.match(/rv:([\d.]+)/), c.version = g ? g[1] : "")) : d.indexOf("firefox") > -1 ? (c.browser = a.BROWSER.firefox, g = d.match(/firefox\/([\d.]+)/), g ? c.version = g[1] : (g = d.match(/rv:([\d.]+)/), c.version = g ? g[1] : "")) : d.indexOf("micromessenger") > -1 ? (c.browser = a.BROWSER.micromessage, g = d.match(/micromessenger\/([\d.]+)/), c.version = g ? g[1] : "") : d.indexOf("mqqbrowser") > -1 ? (c.browser = a.BROWSER.qqbrowser, g = d.match(/mqqbrowser\/([\d.]+)/), c.version = g ? g[1] : "") : d.indexOf("baidubrowser") > -1 ? (c.browser = a.BROWSER.baidu, g = d.match(/baidubrowser\/([\d.]+)/), c.version = g ? g[1] : "") : d.indexOf("ucbrowser") > -1 ? (c.browser = a.BROWSER.uc, g = d.match(/ucbrowser\/([\d.]+)/), c.version = g ? g[1] : "") : d.indexOf("liebaofast") > -1 ? (c.browser = a.BROWSER.liebao, g = d.match(/liebaofast\/([\d.]+)/), c.version = g ? g[1] : "") : d.indexOf("chrome") > -1 ? (c.browser = a.BROWSER.chrome, g = d.match(/chrome\/([\d.]+)/), c.version = g ? g[1] : "") : d.indexOf("oupeng") > -1 ? (c.browser = a.BROWSER.opera, g = d.match(/oupeng\/([\d.]+)/), c.version = g ? g[1] : "") : d.indexOf("safari") > -1 && (c.browser = a.BROWSER.safari, g = d.match(/safari\/([\d.]+)/), c.version = g ? g[1] : ""), c.version = c.version || "", c.browser = c.browser || "", c.language = (navigator.browserLanguage || navigator.language).toLowerCase(), c.isMobile = d.indexOf("mobile") > -1 || d.indexOf("android") > -1, d.match(/(ipad|iphone|ipod)/) ? c.os = a.SYSTEM.IOS : d.indexOf("android") > -1 || f.indexOf("android") > -1 ? c.os = a.SYSTEM.ANDROID : e.indexOf("win") > -1 ? c.os = a.SYSTEM.WINDOWS : e.indexOf("mac") > -1 ? c.os = a.SYSTEM.MAC : e.indexOf("x11") > -1 ? c.os = a.SYSTEM.UNIX : e.indexOf("linux") && (c.os = a.SYSTEM.LINUX), c.visibleSize = {};
        var i = document.getElementById(b.id);
        c.canvasSize = {}, c.scale = {}, c.margin = {}, b.initOption = function (a, d) {
            c.canvasSize.width = i.width, c.canvasSize.height = i.height, c.margin.left = b.getter.marginLeft(i), c.margin.top = b.getter.marginTop(i), c.visibleSize.width = b.getter.visibleWidth(), c.visibleSize.height = b.getter.visibleHeight(), b.adaptive ? (c.scale.x = a, c.scale.y = d) : (c.scale.x = 1, c.scale.y = 1)
        };
        var j = null;
        return window.addEventListener("resize", function () {
            b.initOption(), b.adaptive && (clearTimeout(j), j = setTimeout(h.adaptive, 200))
        }), b
    }(), a.BASECLASS.childList = function () {
        var a = function () {
        };
        return a.prototype.splice = Array.prototype.splice, a.prototype.push = function (a) {
            for (var b = a.style.zIndex, c = this.length; c > 0 && !(this[c - 1].style.zIndex <= b); c--);
            this.splice(c, 0, a)
        }, a.prototype.sortIndex = function () {
            var a, b = 1, c = this.length;
            for (b; c > b; b++) {
                for (a = b; --a >= 0 && !(this[a].style.zIndex < this[b].style.zIndex););
                a !== b - 1 && this.splice(a + 1, 0, this.splice(b, 1)[0])
            }
        }, a
    }(), a.BASECLASS.event = function () {
        var b = function () {
        };
        return b.prototype.accessEvent = {touchDown: function (b, c) {
            if (this.touchDownEventList || (this.touchDownEventList = []), c)a.eventManager.addTouchDown(this), this.touchDownEventList.push(b); else {
                for (var d = 0; d < this.touchDownEventList.length; d++)if (this.touchDownEventList[d] === b) {
                    this.touchDownEventList.splice(d, 1);
                    break
                }
                0 === this.touchDownEventList.length && a.eventManager.removeTouchDown(this)
            }
        }, touchMove: function (b, c) {
            if (this.touchMoveEventList || (this.touchMoveEventList = []), c)a.eventManager.addTouchMove(this), this.touchMoveEventList.push(b); else {
                for (var d = 0; d < this.touchMoveEventList.length; d++)if (this.touchMoveEventList[d] === b) {
                    this.touchMoveEventList.splice(d, 1);
                    break
                }
                0 === this.touchMoveEventList.length && a.eventManager.removeTouchMove(this)
            }
        }, touchUp: function (b, c) {
            if (this.touchUpEventList || (this.touchUpEventList = []), c)a.eventManager.addTouchUp(this), this.touchUpEventList.push(b); else {
                for (var d = 0; d < this.touchUpEventList.length; d++)if (this.touchUpEventList[d] === b) {
                    this.touchUpEventList.splice(d, 1);
                    break
                }
                0 === this.touchUpEventList.length && a.eventManager.removeTouchUp(this)
            }
        }, load: function (a, b) {
            if (this.loadEventList || (this.loadEventList = []), b)this.loadEventList.push(a); else for (var c = 0; c < this.loadEventList.length; c++)if (this.loadEventList[c] === a) {
                this.loadEventList.splice(c, 1);
                break
            }
        }}, b.prototype.on = function (a, b) {
            return"string" != typeof a ? (console.error("传入事件名错误"), this) : (this.accessEvent[a] && this.accessEvent[a].call(this, b, !0), this)
        }, b.prototype.off = function (a, b) {
            return"string" != typeof a ? (console.error("传入事件名错误"), this) : (this.accessEvent[a] && this.accessEvent[a].call(this, b, !1), this)
        }, b.prototype.touchDown = function (a, b) {
            return a ? (this.on("touchDown", a), this) : (this.touchDownEventList && this.touchDownEventList.forEach(function (a) {
                a(b)
            }), this)
        }, b.prototype.touchDownEventList = null, b.prototype.touchMove = function (a, b) {
            return a ? (this.on("touchMove", a), this) : (this.touchMoveEventList && this.touchMoveEventList.forEach(function (a) {
                a(b)
            }), this)
        }, b.prototype.touchMoveEventList = null, b.prototype.touchUp = function (a, b) {
            return a ? (this.on("touchUp", a), this) : (this.touchUpEventList && this.touchUpEventList.forEach(function (a) {
                a(b)
            }), this)
        }, b.prototype.touchUpEventList = null, b.prototype.load = function (a) {
            return a ? (this.on("load", a), this) : (this.loadEventList && this.loadEventList.forEach(function (a) {
                a()
            }), this)
        }, b.prototype.loadEventList = null, b
    }(), a.BASECLASS.styleList = function () {
        var b = function (a) {
            this.node = a, this.storage = {}
        };
        return b.prototype = {constructor: b, get left() {
            return"center" === this.storage.align ? (this.storage.left || 0) - this.storage.innerTextWidth / 2 : "right" === this.storage.align ? this.storage.left - this.storage.innerTextWidth : this.storage.left || 0
        }, set left(a) {
            this.storage.left = a
        }, get top() {
            return this.storage.top || 0
        }, set top(a) {
            this.storage.top = a
        }, get x() {
            return this.storage.left || 0
        }, set x(a) {
            return this.storage.left = a
        }, get y() {
            return this.storage.top || 0
        }, set y(a) {
            this.storage.top = a
        }, get rotate() {
            return this.storage.rotate || 0
        }, set rotate(a) {
            this.storage.rotate = parseFloat(a)
        }, get scale() {
            return this.storage.scaleX === this.storage.scaleY ? this.storage.scaleX || 1 : this.storage.scaleX || "1 " + this.storage.scaleY || 1
        }, set scale(a) {
            var b = a.toString().split(" ");
            1 === b.length ? this.storage.scaleX = this.storage.scaleY = b[0] : (this.storage.scaleX = b[0], this.storage.scaleY = b[1])
        }, get scaleX() {
            return this.storage.scaleX || 1
        }, set scaleX(a) {
            this.storage.scaleX = parseFloat(a)
        }, get scaleY() {
            return this.storage.scaleY || 1
        }, set scaleY(a) {
            this.storage.scaleY = parseFloat(a)
        }, get width() {
            return this.storage.width ? this.storage.width : this.storage.backgroundImage ? this.storage.backgroundImage.width : this.storage.innerTextWidth ? this.storage.innerTextWidth : 0
        }, set width(a) {
            this.storage.width = a, this.node.cache && (this.node.cache.width = a, this.node.waitDrawing = !0, this.node.update())
        }, get height() {
            return this.storage.height ? this.storage.height : this.storage.backgroundImage ? this.storage.backgroundImage.height : this.storage.innerTextArray ? this.lineHeight * (this.storage.innerTextRow || this.storage.innerTextArray.length) + 4 : 0
        }, set height(a) {
            this.storage.height = a, this.node.cache && (this.node.cache.height = a, this.node.waitDrawing = !0, this.node.update())
        }, get color() {
            return this.storage.color || "#000"
        }, set color(a) {
            this.storage.color = a
        }, get opacity() {
            return this.storage.opacity || 1
        }, set opacity(a) {
            this.storage.opacity = parseFloat(a)
        }, get zIndex() {
            return this.storage.zIndex || 0
        }, set zIndex(a) {
            this.storage.zIndex = parseInt(a)
        }, get backgroundColor() {
            return this.storage.backgroundColor || "#FFF"
        }, set backgroundColor(a) {
            this.storage.backgroundColor = a
        }, get backgroundImage() {
            return this.storage.backgroundImage
        }, set backgroundImage(b) {
            "string" == typeof b && (b = a.BASENODE.texture.manager.create(b)), b.nodeList.push(this.node), this.storage.backgroundImage = b
        }, get backgroundSize() {
            return this.backgroundSizeWidth + "px " + this.backgroundSizeHeight + "px"
        }, set backgroundSize(a) {
            var b = a.split(" ");
            1 === b.length ? this.backgroundSizeWidth = this.backgroundSizeHeight = b[0] : 2 === b.length && (this.backgroundSizeWidth = b[0], this.backgroundSizeHeight = b[1])
        }, get backgroundSizeWidth() {
            return this.storage.backgroundSizeWidth || this.width
        }, set backgroundSizeWidth(a) {
            this.storage.backgroundSizeWidth = parseInt(a)
        }, get backgroundSizeHeight() {
            return this.storage.backgroundSizeHeight || this.height
        }, set backgroundSizeHeight(a) {
            this.storage.backgroundSizeHeight = parseInt(a)
        }, get backgroundPosition() {
            return this.backgroundPositionLeft + "px " + this.backgroundPositionTop + "px"
        }, set backgroundPosition(a) {
            var b = a.split(" ");
            1 === b.length ? this.backgroundPositionLeft = this.backgroundPositionTop = b[0] : 2 === b.length && (this.backgroundPositionLeft = parseInt(b[0]), this.backgroundPositionTop = parseInt(b[1]))
        }, get backgroundPositionLeft() {
            return this.storage.backgroundPositionLeft || 0
        }, set backgroundPositionLeft(a) {
            this.storage.backgroundPositionLeft = parseInt(a)
        }, get backgroundPositionTop() {
            return this.storage.backgroundPositionTop || 0
        }, set backgroundPositionTop(a) {
            this.storage.backgroundPositionTop = parseInt(a)
        }, get align() {
            return this.storage.align || "left"
        }, set align(a) {
            this.storage.align = a
        }, get lineHeight() {
            return this.storage.lineHeight || this.fontSize
        }, set lineHeight(a) {
            this.storage.lineHeight = parseInt(a)
        }, get font() {
            return this.fontStyle + " " + this.fontSize + "px " + this.fontFamily
        }, set font(a) {
            var b = a.split(" ");
            switch (b.length) {
                case 1:
                    this.fontSize = b[0];
                    break;
                case 2:
                    this.fontStyle = b[0], this.fontSize = b[1];
                    break;
                case 3:
                    this.fontStyle = b[0], this.fontSize = b[1], this.fontFamily = b[2]
            }
        }, get fontStyle() {
            return this.storage.fontStyle || "Normal"
        }, set fontStyle(a) {
            this.storage.fontStyle = a
        }, get fontSize() {
            return this.storage.fontSize || 14
        }, set fontSize(a) {
            this.storage.fontSize = parseInt(a)
        }, get fontFamily() {
            return this.storage.fontFamily || "Arial"
        }, set fontFamily(a) {
            this.storage.fontFamily = a.toString()
        }}, b
    }();
    var fps = document.getElementById("fps");
    var fpsNum = 0;
    setInterval(function(){
        fps && (fps.innerHTML = fpsNum);
        fpsNum = 0;
    }, 1000)
    var b = function () {
        var b, c, d, e, f = 0, g = {get line() {
            return f
        }, getDrawTime: function () {
        }}, h = null;
        return g.init = function () {
            c = 0, b = 1e3 / a.options.fps
        }, g.init(), g.start = function (a) {
            d = new Date;
            var i = function () {
                fpsNum++;
                e = new Date, c = e - d, f += c;
                var j = c / b;
                a(j), d = e;
                var k = new Date, l = k - e;
                g.getDrawTime(l), h = l > b ? setTimeout(function () {
                    i()
                }, 0) : setTimeout(function () {
                    i()
                }, b - l)
            };
            i()
        }, g
    }();
    a.BASENODE.texture = function () {
        var b = function (a) {
            a && this.setImage(a), this.nodeList = [];
            var b = this;
            this.on("load", function () {
                b.width = b.image.width, b.height = b.image.height, b.loaded = !0, b.nodeList.forEach(function (a) {
                    a.update()
                })
            })
        };
        a.utils.inherit(b, a.BASECLASS.event), b.prototype.loaded = !1, b.prototype.imagePath = "", b.prototype.image = null, b.prototype.width = 0, b.prototype.height = 0, b.prototype.setImage = function (a) {
            this.path = a, this.image = document.createElement("img");
            var b = this;
            return this.image.addEventListener("load", function () {
                b.load()
            }), this.image.src = a, this
        };
        var c = {pathToElem: {}, create: function (a) {
            if (c.pathToElem[a])return c.pathToElem[a];
            var d = new b(a);
            return c.pathToElem[a] = d, d
        }};
        return b.manager = c, b
    }(), a.BASENODE.node = function () {
        var c = 0, d = function () {
            this.uniqueNumber = c++, this.parent = null, this.style = new a.BASECLASS.styleList(this), this.active = !1, this.animate = !1, this.__managerId__ = ""
        };
        a.utils.inherit(d, a.BASECLASS.event);
        var e = function (a, b) {
            for (var c in b)f(a, c, b[c])
        }, f = function (a, b, c) {
            a.style[b] = c
        };
        d.prototype.update = function () {
            for (var a = this.parent; a && !a.waitDrawing;)a.waitDrawing = !0, a = a.parent
        }, d.prototype.get = function (a) {
            return this.style[a]
        }, d.prototype.set = function (a, b) {
            switch (arguments.length) {
                case 2:
                    f(this, a, b);
                    break;
                case 1:
                    e(this, a)
            }
            return this.update(), this
        }, d.prototype.text = function (a) {
            return a = a.toString(), this.innerText = a, this.update(), this
        }, d.prototype.frame = function (a) {
            var b = 0, c = a.length, d = this;
            d.animate = !0;
            var e = function () {
                var f = a[b++];
                for (var g in f)"time" !== g && (d.style[g] = f[g]);
                d.active && d.animate && h.delay(e, f.time), b >= c && (b = 0), d.update()
            }, f = a[b++];
            for (var g in f)"time" !== g && (d.style[g] = f[g]);
            h.delay(e, f.time), this.update()
        }, d.prototype.stop = function () {
            this.animate = !1
        }, d.prototype.to = function (a, c, d, e) {
            var f, g, i = this.style, j = {};
            for (g in a)f = a[g] - i[g], isNaN(f) ? console.log("动画不支持设置 " + g + " 属性") : (a[g] = f, j[g] = i[g]);
            var k = this;
            k.animate = !0;
            var l = b.line, m = function () {
                if (k.active && k.animate) {
                    var f = b.line - l, i = f / c;
                    e && (i = e(i)), i >= 1 ? (i = 1, "function" == typeof d && d()) : h.delay(m, 1);
                    for (g in a)k.style[g] = j[g] + a[g] * i;
                    k.update()
                }
            };
            return h.delay(m, 1), this
        }, d.prototype.__defineGetter__("innerText", function () {
            var a = this.style.storage.innerTextArray;
            return a ? a.split("\n") : ""
        }), d.prototype.__defineSetter__("innerText", function (a) {
            this.style.storage.innerTextArray = a ? a.toString().split("\n") : void 0, this.style.storage.innerTextWidth = 0
        });
        var g = {idToElem: {}, create: function () {
            return new d
        }};
        return d.manager = g, d.prototype.__defineGetter__("id", function () {
            return this.__managerId__
        }), d.prototype.__defineSetter__("id", function (a) {
            a = a.toString(), "" != this.__managerId__ && g.idToElem[a] && delete g.idToElem[a], "" !== a && (g.idToElem[a] = this), this.__managerId__ = a
        }), d
    }(), a.BASENODE.audio = function () {
        var a = 0, b = function (b) {
            this.audioID = a++, b && this.setPath(b)
        };
        b.prototype.setPath = function (a) {
            this.audio = document.createElement("audio"), this.path = a, this.audio.src = a
        }, b.prototype.play = function () {
            this.stop(), this.audio.play()
        }, b.prototype.stop = function () {
            this.audio.load()
        };
        var c = {pathToElem: {}, create: function (a) {
            if (c.pathToElem[a])return c.pathToElem[a];
            var d = new b(a);
            return c.pathToElem[a] = d, d
        }};
        return b.manager = c, b
    }(), a.BASENODE.block = function () {
        var b = a.BASENODE.node, c = a.BASECLASS.childList, d = function () {
            b.call(this), this.cache = document.createElement("canvas"), this.cache.width = this.style.width, this.cache.height = this.style.height, this.waitDrawing = !1, this.children = new c
        };
        a.utils.inherit(d, b);
        var e = function (a, b) {
            a.active = b;
            var c = a.children;
            if (c)for (var d = 0; d < c.length; d++)e(c[d], b)
        };
        d.prototype.append = function (a) {
            e(a, !0), a.parent = this;
            for (var b = 0; b < this.children.length; b++)if (this.children[b] === a)return;
            this.children.push(a), this.waitDrawing = !0, this.update()
        }, d.prototype.remove = function (a) {
            a.parent = this;
            for (var b = 0; b < this.children.length; b++)if (this.children[b] === a) {
                e(a, !1), this.children.splice(b, 1);
                break
            }
            this.waitDrawing = !0, this.update()
        };
        var f = {idToElem: {}, create: function () {
            return new d
        }};
        return d.manager = f, d.prototype.__defineGetter__("id", function () {
            return this.__managerId__
        }), d.prototype.__defineSetter__("id", function (a) {
            a = a.toString(), "" != this.__managerId__ && f.idToElem[a] && delete f.idToElem[a], "" !== a && (f.idToElem[a] = this), this.__managerId__ = a
        }), d
    }(), a.viewManager = function () {
        var b = function () {
        };
        return b.prototype.full = function (b) {
            b.style.width = a.options.system.visibleSize.width + "px", b.style.height = a.options.system.visibleSize.height + "px";
            var c = a.options.system.visibleSize.width / b.width, d = a.options.system.visibleSize.height / b.height;
            a.options.initOption(c, d)
        }, b.prototype.width = function (b) {
            var c = a.options.system.visibleSize.width / b.width;
            b.style.width = a.options.system.visibleSize.width + "px", b.style.height = b.height * c + "px", a.options.initOption(c, c)
        }, b.prototype.height = function (b) {
            var c = a.options.system.visibleSize.height / b.height;
            b.style.width = b.width * c + "px", b.style.height = a.options.system.visibleSize.height + "px", a.options.initOption(c, c)
        }, b.prototype.min = function (b) {
            var c = a.options.system.visibleSize.width / b.width, d = a.options.system.visibleSize.height / b.height;
            d > c ? (b.style.width = a.options.system.visibleSize.width + "px", b.style.height = b.height * c + "px", a.options.initOption(c, c)) : (b.style.width = b.width * d + "px", b.style.height = a.options.system.visibleSize.height + "px", a.options.initOption(d, d))
        }, b.prototype.max = function (b) {
            var c = a.options.system.visibleSize.width / b.width, d = a.options.system.visibleSize.height / b.height;
            c > d ? (b.style.width = a.options.system.visibleSize.width + "px", b.style.height = b.height * c + "px", a.options.initOption(c, c)) : (b.style.width = b.width * d + "px", b.style.height = a.options.system.visibleSize.height + "px", a.options.initOption(d, d))
        }, new b
    }(), a.drawManager = function () {
        var a = {}, b = function (b, c, d, e) {
            a.drawer.drawRect(d.storage.backgroundColor, b, c, d.width, d.height, e)
        }, c = function (b, c, d, e) {
            var f = d.storage.backgroundImage.canvas || d.storage.backgroundImage.image;
            (0 != d.width || 0 != d.height) && a.drawer.drawImage(f, d.backgroundPositionLeft, d.backgroundPositionTop, d.width, d.height, b, c, d.backgroundSizeWidth, d.backgroundSizeHeight, e)
        }, d = function (b, c, d, e, f) {
            var g, h, i = b.length, j = e.width, k = e.fontSize, l = e.storage.align, m = (e.lineHeight - e.fontSize) / 2;
            if (e.storage.width) {
                "right" === l && (c += j), "center" === l && (c += j / 2)
            } else"right" === l && (c += e.storage.innerTextWidth), "center" === l && (c += e.storage.innerTextWidth / 2);
            for (g = 0; i > g; g++)h = b[g], a.drawer.drawFont(h, k, e.color, c, d + g * e.lineHeight + m, f)
        }, e = function (b, c) {
            a.drawer.setFont(b.fontStyle, b.fontSize, b.fontFamily, b.align, c)
        }, f = function (a, f) {
            if (a) {
                var g, h, i = a.storage.innerTextArray;
                if (f.globalAlpha = a.opacity, a.storage.innerTextArray)if (g = [], h = i.length, e(a, f), a.storage.width) {
                    var j, k, l, m, n, o, p = a.storage.width;
                    for (j = 0, k = 0; h > j; j++) {
                        l = i[j], m = 0;
                        do {
                            for (o = l.length, n = f.measureText(l).width; n > p && o > 1;) {
                                var q = p / n * o | 0;
                                q === o ? o -= 1 : o = 0 === q ? 1 : q, l = l.substr(0, o), n = f.measureText(l).width
                            }
                            k++, g.push(l), m += o, l = i[j].substr(m), o = 0
                        } while (l && "" !== l)
                    }
                    a.storage.innerTextRow !== k && (a.storage.innerTextRow = k)
                } else {
                    if (!a.storage.innerTextWidth) {
                        var r = 0;
                        a.storage.innerTextArray.forEach(function (a) {
                            var b = f.measureText(a).width;
                            b > r && (r = b)
                        }), a.storage.innerTextWidth = r
                    }
                    g = a.storage.innerTextArray
                }
                var s, t, u = 1, v = 0;
                a.storage.rotate || a.storage.scaleX || a.storage.scaleY ? (f.save(), s = -a.width / 2, t = -a.height / 2, u = Math.cos(a.rotate * Math.PI / 180) * a.scaleX, v = Math.sin(a.rotate * Math.PI / 180) * a.scaleY, f.transform(u, v, -v, u, a.left + a.width / 2, a.top + a.height / 2)) : (s = a.left, t = a.top), a.storage.backgroundImage ? c(s, t, a, f) : a.storage.backgroundColor && b(s, t, a, f), a.storage.innerTextArray && d(g, s, t, a, f), (a.storage.rotate || a.storage.scaleX || a.storage.scaleY) && f.restore()
            }
        };
        return a.parse = function (b, c) {
            var d = 0;
            if (b.cache) {
                if (b.waitDrawing) {
                    a.drawer.ctx(b.cache).clearRect(0, 0, b.style.width, b.style.height);
                    for (var e = b.children, g = e.length, h = 0; g > h; h++)d += a.parse(e[h], a.drawer.ctx(b.cache));
                    b.waitDrawing = !1
                }
                b.parent && (f(b.style, c), a.drawer.drawImage(b.cache, 0, 0, b.cache.width, b.cache.height, b.style.left, b.style.top, b.cache.width, b.cache.height, c))
            } else f(b.style, c);
            return++d
        }, a
    }(), a.eventManager = function () {
        var b, c = {}, d = [], e = [], f = [], g = function (b, c) {
            this.type = c || "unknown", this.x = (b.x - a.options.system.margin.left) / a.options.system.scale.x, this.y = (b.y - a.options.system.margin.top) / a.options.system.scale.y
        }, h = function (a, b, c) {
            var d, e = [], f = a.x, g = a.y;
            for (d = 0; d < b.length; d++) {
                var h = b[d];
                h.active && h.style.left < f && h.style.top < g && f < h.style.left + h.style.width && g < h.style.top + h.style.height && e.push(h)
            }
            c(e)
        }, i = function (b) {
            var c = new g(a.options.getter.mouseEvent(b), "touchDown");
            h(c, d, function (a) {
                for (var b = 0; b < a.length && a[b].touchDown(null, c); b++);
            })
        }, j = function (b) {
            var c = new g(a.options.getter.mouseEvent(b), "touchMove");
            return h(c, e, function (a) {
                for (var b = 0; b < a.length && a[b].touchMove(null, c); b++);
            }), b && b.preventDefault ? b.preventDefault() : window.event.returnValue = !1, !1
        }, k = function (b) {
            var c = new g(a.options.getter.mouseEvent(b), "touchUp");
            h(c, f, function (a) {
                for (var b = 0; b < a.length && a[b].touchUp(null, c); b++);
            })
        };
        return c.init = function () {
            b = document.getElementById(a.options.id), a.options.system.isMobile ? (b.addEventListener(a.options.getter.touchDown, i), b.addEventListener(a.options.getter.touchMove, j), b.addEventListener(a.options.getter.touchUp, k)) : (b.addEventListener(a.options.getter.mouseDown, i), b.addEventListener(a.options.getter.mouseMove, j), b.addEventListener(a.options.getter.mouseUp, k))
        }, c.addTouchDown = function (a) {
            for (var b = 0; b < d.length; b++)if (a.uniqueNumber > d[b].uniqueNumber)return void d.splice(b, 0, a);
            d.push(a)
        }, c.addTouchMove = function (a) {
            for (var b = 0; b < e.length; b++)if (a.uniqueNumber > e[b].uniqueNumber)return void e.splice(b, 0, a);
            e.push(a)
        }, c.addTouchUp = function (a) {
            for (var b = 0; b < f.length; b++)if (a.uniqueNumber > f[b].uniqueNumber)return void f.splice(b, 0, a);
            f.push(a)
        }, c.removeTouchDown = function (a) {
            for (var b = 0; b < d.length; b++)if (a.uniqueNumber == d[b].uniqueNumber)return void d.splice(b, 1)
        }, c.removeTouchMove = function (a) {
            for (var b = 0; b < e.length; b++)if (a.uniqueNumber == e[b].uniqueNumber)return void e.splice(b, 1)
        }, c.removeTouchUp = function (a) {
            for (var b = 0; b < f.length; b++)if (a.uniqueNumber == f[b].uniqueNumber)return void f.splice(b, 1)
        }, c
    }(), a.elemManager = function () {
        var b = {node: a.BASENODE.node, block: a.BASENODE.block, texture: a.BASENODE.texture, audio: a.BASENODE.audio}, c = {};
        return c.createNode = function (a) {
            var c = b[a];
            return c ? c = c.manager.create ? c.manager.create.apply(c.manager, Array.prototype.splice.call(arguments, 1)) : new c : null
        }, c.getNodeWithId = function (a) {
            var c, d;
            for (c in b)if (d = b[c].manager, d && d.idToElem && d.idToElem[a])return d.idToElem[a];
            return null
        }, c.defineNode = function (a, c) {
            b[a] = c
        }, c
    }(), function () {
        var b = function () {
        };
        b.prototype.visibleWidth = function () {
            return document.documentElement.clientWidth
        }, b.prototype.visibleHeight = function () {
            return document.documentElement.clientHeight
        }, b.prototype.marginLeft = function (a) {
            return a.offsetParent ? arguments.callee(a.offsetParent) + a.offsetLeft : a.offsetLeft
        }, b.prototype.marginTop = function (a) {
            return a.offsetParent ? arguments.callee(a.offsetParent) + a.offsetTop : a.offsetTop
        }, b.prototype.mouseDown = "mousedown", b.prototype.mouseMove = "mousemove", b.prototype.mouseIn = "mouseover", b.prototype.mouseOut = "mouseout", b.prototype.mouseUp = "mouseup", b.prototype.touchDown = "touchstart", b.prototype.touchMove = "touchmove", b.prototype.touchUp = "touchend", b.prototype.mouseEvent = function (a) {
            var b = {point: []};
            if (a.changedTouches) {
                b.x = a.changedTouches[0].clientX, b.y = a.changedTouches[0].clientY;
                for (var c = 0; c < a.changedTouches.length; c++) {
                    var d = a.changedTouches[c];
                    b.point.push({x: d.clientX, y: d.clientY})
                }
            } else b.x = a.x, b.y = a.y, b.point.push({x: a.x, y: a.y});
            return b
        }, a.options.getter || (a.options.getter = new b)
    }(), function () {
        var b = function () {
        };
        b.prototype.init = function () {
        }, b.prototype.ctx = function (a) {
            return a.getContext("2d")
        }, b.prototype.drawRect = function (a, b, c, d, e, f) {
            f.fillStyle = a, f.fillRect(b, c, d, e)
        }, b.prototype.drawLine = function () {
        }, b.prototype.drawImage = function (a, b, c, d, e, f, g, h, i, j) {
            j.drawImage(a, b, c, d, e, f, g, h, i)
        }, b.prototype.setFont = function (a, b, c, d, e) {
            e.font = a + " " + b + "px " + c, e.textAlign = d || "left"
        }, b.prototype.drawFont = function (a, b, c, d, e, f) {
            f.fillStyle = c, a && f.fillText(a, d, e + b)
        }, a.drawManager.drawer || (a.drawManager.drawer = new b)
    }(), window.h = function () {
        var c, d = a.viewManager, e = a.drawManager, f = a.eventManager, g = [], h = [], i = function (a) {
            if (!a)return i.canvas;
            var b = a.substr(0, 1), c = a.substr(1);
            return j[b] ? j[b](c) : null
        }, j = {"#": function (b) {
            return a.elemManager.getNodeWithId(b)
        }, "@": function (b) {
            return a.elemManager.createNode(b)
        }};
        for (var k in a)i[k] = a[k];
        return i.log = function () {
        }, i.delay = function (a, c) {
            for (var d = {time: b.line + c, callback: a}, e = g.length, f = 0; e > f; f++)if (g[f].time > d.time)return void g.splice(f, 0, d);
            g.push(d)
        }, i.interval = function (a, b) {
            var c = function () {
                a(), i.interval(a, b)
            };
            c.ctor = a, i.delay(c, b)
        }, i.clearDelay = function (a) {
            for (var b = 0; b < g.length; b++)if ((g[b].callback.ctor || g[b].callback) === a) {
                g.splice(b, 1);
                break
            }
        }, i.setOption = function (b) {
            b.id && (a.options.id = b.id), b.debug && (a.options.debug = b.debug)
        }, i.adaptive = function (b) {
            null != b && (a.options.adaptive = b);
            var e = {padding: 0, margin: 0, overflow: "hidden", height: a.options.system.visibleSize.height + "px", width: a.options.system.visibleSize.width + "px"};
            for (var f in e)document.body.style[f] = e[f];
            1 === a.options.adaptive ? d.full(c) : 2 === a.options.adaptive ? d.width(c) : 3 === a.options.adaptive ? d.height(c) : 4 === a.options.adaptive ? d.min(c) : 5 === a.options.adaptive && d.max(c)
        }, i.init = function (d) {
            c = document.getElementById(a.options.id), i.canvas = i("@block"), i.canvas.style.width = c.width, i.canvas.style.height = c.height, i.canvas.cache = c, i.canvas.id = "canvas", i.canvas.active = !0, a.options.initOption(), b.start(function () {
                for (; g[0] && g[0].time < b.line;)g.shift().callback();
                var a = e.parse(i.canvas, e.drawer.ctx(c));
                i._getDebugInfo(g.length, a)
            }), f.init(), h.forEach(function (a) {
                a(d)
            }), "function" == typeof d && d()
        }, i.addInitTask = function (a) {
            "function" == typeof a && h.push(a)
        }, i._getDebugInfo = function () {
        }, i
    }(), function (a, b, c) {
        var d, e, f, g, i, j, k, l, m, n = function () {
            if (!h.options.debug)return!1;
            d = (new a).set({width: 200, height: 195, backgroundColor: "#222", opacity: .3, zIndex: Number.MAX_VALUE}), e = (new b).set({color: "#fff", left: 10, top: 5}).text("harbors 0.0.1"), f = (new b).set({color: "#fff", left: 10, top: 25}).text(h.options.system.os + "  " + h.options.system.browser + "  " + h.options.system.version.substr(0, 8) + "..."), g = (new b).set({color: "#fff", left: 10, top: 45}).text("time:      draw:         task:"), i = [];
            for (var n = 0; 6 > n; n++)i.push((new b).set({color: "#fff", left: 10, top: 65 + 20 * n})), d.append(i[n]);
            k = (new b).set({color: "#fff", left: 42, top: 45}).text("0"), m = (new b).set({color: "#fff", left: 100, top: 45}).text("0"), j = (new b).set({color: "#fff", left: 162, top: 45}).text("0"), d.append(e), d.append(f), d.append(g), d.append(k), d.append(m), d.append(j), h("#canvas").append(d), l = [], h.log = function (a) {
                for (var b = 1; b < arguments.length; b++)switch (typeof arguments[b]) {
                    case"string":
                        a = a.replace("%s", arguments[b]);
                        break;
                    case"number":
                        a = a.replace("%d", arguments[b]);
                        break;
                    default:
                        a = a.replace("%s", arguments[b].toString())
                }
                for (l.push(a); l.length > 6;)l.shift();
                for (b = 0; b < l.length; b++)i[b].text(l[b])
            };
            var o = 0;
            c.getDrawTime = function (a) {
                o++ < 30 || (o = 0, k && k.text(a))
            };
            var p = 0;
            h._getDebugInfo = function (a, b) {
                p++ < 30 || (p = 0, j && j.text(a), m && m.text(b))
            }
        };
        h.addInitTask(n)
    }(a.BASENODE.block, a.BASENODE.node, b), function (a) {
        a.__defineModuleName = null;
        var b = {}, c = [], d = 0, e = function (a, b) {
            for (var c = a.replace(/(\/)?[^\/]+$/, ""); /^\.\.\//.test(b);)b = b.replace(/^\.\.\//, ""), c = c.replace(/(\/)?[^\/]+$/, "");
            return b = b.replace(/^(\.)?\//, ""), c += "/" + b, /\.js$/.test(c) || (c += ".js"), c
        }, f = function () {
            var e = c[d];
            if (!e)return i();
            a.__defineModuleName = e, b[e] = {};
            var g = document.createElement("script");
            g.src = e, g.addEventListener("load", function () {
                d++, f()
            }), g.addEventListener("error", function () {
                d++, f()
            }), document.body.appendChild(g)
        }, g = function (a) {
            for (var c in b) {
                var d = b[c];
                if (d.deps)for (var e = 0; e < d.deps.length; e++)if (d.deps[e] === a) {
                    d.deps.splice(e, 1);
                    break
                }
            }
        }, i = function () {
            for (var a = 1, c = !0; a && c;) {
                a = 0, c = !1;
                for (var d in b) {
                    var e = b[d];
                    e.deps && (0 === e.deps.length ? (c = !0, e.callback(e.require, e.exports, e), g(e.id), delete e.callback, delete e.deps, delete e.require) : a++)
                }
            }
        };
        h.define = function () {
            var d, f, g;
            Array.prototype.forEach.call(arguments, function (a) {
                var b = typeof a;
                "string" === b ? d = a : "Object" === b ? f = a : "function" === b && (g = a)
            }), d || (d = a.__defineModuleName), a.__defineModuleName = null, f || (f = [], g.toString().replace(/require\((.+)\)/g, function (a, b) {
                b = b.replace(/(^(\"|\')|(\"|\')$)/g, ""), b = e(d, b), f.push(b)
            })), b[d] = {id: d, deps: f, callback: g, exports: {}, require: function (a) {
                var c = e(d, a);
                return b[c] ? b[c].exports : null
            }};
            for (var h = 0; h < f.length; h++) {
                var i = f[h];
                b[i] || c.push(i)
            }
        }, h.addInitTask(function (a) {
            a && (c.push(a + ".js"), f())
        }), window.define || (a.define = h.define)
    }(window)
}(window);